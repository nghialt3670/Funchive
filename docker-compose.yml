services:
  # Docker in Docker service for isolated Docker operations
  docker-dind:
    image: docker:27-dind
    container_name: funchive-docker-dind
    networks:
      - funchive-network
    privileged: true
    restart: unless-stopped
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    volumes:
      - docker-certs-ca:/certs/ca
      - docker-certs-client:/certs/client
      - docker-data:/var/lib/docker
    ports:
      - "2376:2376"  # Docker TLS port
      - "2375:2375"  # Docker non-TLS port (for development)
    command: ["dockerd", "--host=unix:///var/run/docker.sock", "--host=tcp://0.0.0.0:2375", "--host=tcp://0.0.0.0:2376", "--tls=false"]
    healthcheck:
      test: ["CMD", "docker", "info"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kafka and Zookeeper services
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: funchive-zookeeper
    networks:
      - funchive-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: funchive-kafka
    networks:
      - funchive-network
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  funchive-config-server:
    build:
      context: ./funchive-config-server
      dockerfile: Dockerfile
    container_name: funchive-config-server
    networks:
      - funchive-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  funchive-discovery-server:
    build:
      context: ./funchive-discovery-server
      dockerfile: Dockerfile
    container_name: funchive-discovery-server
    networks:
      - funchive-network
    depends_on:
      funchive-config-server:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  funchive-user-service:
    build:
      context: ./funchive-user-service
      dockerfile: Dockerfile
    container_name: funchive-user-service
    networks:
      - funchive-network
    depends_on:
      funchive-discovery-server:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  funchive-function-service:
    build:
      context: ./funchive-function-service
      dockerfile: Dockerfile
    container_name: funchive-function-service
    networks:
      - funchive-network
    depends_on:
      funchive-discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  funchive-sandbox-service:
    build:
      context: ./funchive-sandbox-service
      dockerfile: Dockerfile
    container_name: funchive-sandbox-service
    networks:
      - funchive-network
    depends_on:
      funchive-discovery-server:
        condition: service_healthy
      docker-dind:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - DOCKER_HOST=tcp://docker-dind:2375  # Connect to DinD container
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  funchive-function-mongodb:
    image: mongo:6.0
    container_name: funchive-function-mongodb
    networks:
      - funchive-network
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - funchive-function-mongodb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: funchive_function_db

  funchive-sandbox-mongodb:
    image: mongo:6.0
    container_name: funchive-sandbox-mongodb
    networks:
      - funchive-network
    restart: unless-stopped
    ports:
      - "27018:27017"
    volumes:
      - funchive-sandbox-mongodb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: funchive_sandbox_db

  funchive-gateway-server:
    build:
      context: ./funchive-gateway-server
      dockerfile: Dockerfile
    container_name: funchive-gateway-server
    networks:
      - funchive-network
    depends_on:
      - funchive-discovery-server
      - funchive-user-service
      - funchive-function-service
      - funchive-sandbox-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  funchive-web:
    build:
      context: ./funchive-web
      dockerfile: Dockerfile
    container_name: funchive-web
    networks:
      - funchive-network
    depends_on:
      - funchive-gateway-server
    restart: unless-stopped

networks:
  funchive-network:
    driver: bridge
    name: funchive-network

volumes:
  config-server-data:
    driver: local
  funchive-function-mongodb-data:
    driver: local
  funchive-sandbox-mongodb-data:
    driver: local
  docker-certs-ca:
    driver: local
  docker-certs-client:
    driver: local
  docker-data:
    driver: local
